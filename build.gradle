plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'com.ragnaroh'
version = '0.1.0-SNAPSHOT'

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.ragnaroh'
            artifactId = 'assertj-json'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'AssertJ JSON'
                description = 'Java library for asserting JSON using AssertJ'
                url = 'https://github.com/ragnaroh/assertj-json'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'ragnaroh'
                        name = 'Ragnar Haugan'
                        email = 'ragnaroh@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/ragnaroh/assertj-json.git'
                    developerConnection = 'scm:git:ssh://github.com/ragnaroh/assertj-json.git'
                    url = 'https://github.com/ragnaroh/assertj-json'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshot"
            url = project.hasProperty('release') ? releasesRepoUrl : snapshotsRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

repositories {
    jcenter()
}

dependencies {
    api 'org.assertj:assertj-core:3.14.0'
    api 'com.google.code.gson:gson:2.8.6'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

compileJava {
    sourceCompatibility = 1.8
}

compileTestJava {
    sourceCompatibility = 13
    options.compilerArgs.add('--enable-preview')
}

test {
    useJUnitPlatform()
    jvmArgs(['--enable-preview'])
}
